#!/usr/bin/env bash
set -e

red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
bold=$(tput bold)
reset=$(tput sgr0)

dump=false
kdebug=false
logs=false
args=()
while [[ "$#" -gt '0' ]]; do
    arg="$1"
    case "$arg" in
        --dump|-d ) dump=true    ; shift ;;
        --kdebug  ) kdebug=true  ; shift ;;
        --logs    ) logs=true    ; shift ;;
        *         ) break        ; shift ;;
    esac
done
spec_name="$1" ; shift

export KLAB_OUT=${KLAB_OUT:-out}
export K_OPTS="${K_OPTS:--Xmx16G -Xss512m}"

if [ -z "$KLAB_EVMS_PATH" ]; then
    echo "KLAB_EVMS_PATH must be set and point to evm-semantics!"
    exit 1
fi
echo "Using evm-semantics from $KLAB_EVMS_PATH"
export PATH=$KLAB_EVMS_PATH/.build/usr/bin:$PATH

if [ -f "$KLAB_OUT/meta/name/$spec_name" ]; then
  spec_hash=$(cat "$KLAB_OUT/meta/name/$spec_name")
else
  echo "ERROR: $spec_name is unknown"
  exit 1;
fi

if $logs; then
  mkdir -p "$KLAB_OUT/log/"
  STDOUT="$KLAB_OUT/log/$spec_hash.log"
  STDERR="$KLAB_OUT/log/$spec_hash.err.log"
else
  STDOUT=/dev/stdout
  STDERR=/dev/stderr
fi

target_spec=${target_spec:-"$KLAB_OUT/specs/${spec_hash}.k"}

K_FLAGS=(--z3-impl-timeout 300 --no-exc-wrap)
K_FLAGS+=(--cache-func-optimized --format-failures)
K_FLAGS+=(--boundary-cells k,pc)
K_FLAGS+=(--z3-tactic "(or-else (using-params smt :random-seed 3) (using-params smt :random-seed 2) (using-params smt :random-seed 1))")

prove_mode=prove
if $dump; then
  prove_mode=klab-prove
  dump_notice="(with ${yellow}state logging${reset})"
fi

if $kdebug; then
  K_FLAGS+=(--debug --debug-z3)
fi

info="$(basename "$target_spec") [$spec_name] $dump_notice"
mkdir -p "$KLAB_OUT/started" && echo "$result" > "$KLAB_OUT/started/$spec_hash"
echo "${blue}Proof ${bold}STARTING${reset}: $info"
result=0
kevm $prove_mode "$target_spec" KLAB-VERIFICATION "${K_FLAGS[@]}" "$@" >"$STDOUT" 2>"$STDERR" || result="$?"

if [ $result -eq 0 ]; then
  mkdir -p "$KLAB_OUT/accept" && echo "$result" > "$KLAB_OUT/accept/$spec_hash"
  echo "${green}Proof ${bold}ACCEPT${reset}: $info"
elif [ $result -gt 127 ]; then
  # results > 127 are 128 + signal number
  mkdir -p "$KLAB_OUT/aborted" && echo "$(($result%128))" > "$KLAB_OUT/aborted/$spec_hash"
  echo "Proof ${bold}ABORT${reset} $result SIG$(kill -l $result): $info"
else
  mkdir -p "$KLAB_OUT/reject" && echo "$result" > "$KLAB_OUT/reject/$spec_hash"
  echo "${red}Proof $result ${bold}REJECT${reset}: $info"
fi
exit $result
